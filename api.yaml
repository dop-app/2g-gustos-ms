swagger: '2.0'
info:
  version: 1.1.0
  title: Microservice for Pleasures
  description: Ruby on Rails + Postgresql
  license:
    name: Software Architecture 2018-I
host: '192.168.99.101:3000'
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /categories:
    get:
      summary: Returns all categories
      operationId: getAllCategories
      parameters:
        - name: by_name
          in: query
          description: filter categories by like name
          required: false
          type: string
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/CategoryList'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      summary: Create new category
      operationId: newCategory
      parameters:
        - name: category
          in: body
          required: true
          description: Category Object
          schema:
            $ref: '#/definitions/CategoryInput'
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/UnprocessableEntityModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/categories/{id}':
    get:
      summary: Returns a category with the given id
      operationId: getCategoryById
      parameters:
        - name: id
          in: path
          description: The id of the category to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Category'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/UnprocessableEntityModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      summary: Updates a category with the given id
      operationId: updateCategory
      parameters:
        - name: id
          in: path
          description: The id of the category to be updated
          required: true
          type: integer
        - name: category
          in: body
          required: true
          description: Category Object
          schema:
            $ref: '#/definitions/CategoryInput'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Category'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/UnprocessableEntityModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      summary: Deletes a category with the given id
      operationId: deleteCategory
      parameters:
        - name: id
          in: path
          description: The id of the category to be deleted
          required: true
          type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /subcategories:
    get:
      summary: Returns all subcategories
      operationId: getAllSubCategories
      parameters:
        - name: by_name
          in: query
          description: filter subcategories by like name
          required: false
          type: string
        - name: by_category
          in: query
          description: filter subcategories by CategoryId
          required: false
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/SubcategoryList'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/UnprocessableEntityModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      summary: Create new subcategory
      operationId: newSubcategory
      parameters:
        - name: subcategory
          in: body
          required: true
          description: Subcategory Object
          schema:
            $ref: '#/definitions/SubcategoryInput'
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/UnprocessableEntityModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/subcategories/{id}':
    get:
      summary: Returns a subcategory with the given id
      operationId: getSubCategoryById
      parameters:
        - name: id
          in: path
          description: The id of the category to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Subcategory'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/UnprocessableEntityModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      summary: Updates a subcategory with the given id
      operationId: updatesubcategory
      parameters:
        - name: id
          in: path
          description: The id of the subcategory to be updated
          required: true
          type: integer
        - name: category
          in: body
          required: true
          description: Category Object
          schema:
            $ref: '#/definitions/SubcategoryInput'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/UnprocessableEntityModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      summary: Deletes a subcategory with the given id
      operationId: deleteSubcategory
      parameters:
        - name: id
          in: path
          description: The id of the category to be deleted
          required: true
          type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /pleasures:
    get:
      summary: Returns all pleasures
      operationId: getAllPleasures
      parameters:
        - name: by_subcategory
          in: query
          description: filter pleasures by subcategoryId
          required: false
          type: integer
        - name: by_user
          in: query
          description: filter pleasures by userId
          required: false
          type: integer
        - name: by_category
          in: query
          description: filter pleasures by subcategory in categoryId
          required: false
          type: integer
        - name: by_name
          in: query
          description: filter pleasures by like name
          required: false
          type: string
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/PleasureList'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      summary: Create new pleasure
      operationId: newPleasure
      parameters:
        - name: pleasure
          in: body
          required: true
          description: Pleasure Object
          schema:
            $ref: '#/definitions/PleasureInput'
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/UnprocessableEntityModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
  '/pleasures/{id}':
    get:
      summary: Returns a pleasure with the given id
      operationId: getPleasureById
      parameters:
        - name: id
          in: path
          description: The id of the pleasure to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Pleasure'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      summary: Updates a pleasure with the given id
      operationId: updatePleasure
      parameters:
        - name: id
          in: path
          description: The id of the pleasure to be updated
          required: true
          type: integer
        - name: category
          in: body
          required: true
          description: Pleasure Object
          schema:
            $ref: '#/definitions/PleasureInput'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      summary: Deletes a pleasure with the given id
      operationId: deletePleasure
      parameters:
        - name: id
          in: path
          description: The id of the pleasure to be deleted
          required: true
          type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
definitions:
  Category:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  CategoryInput:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  CategoryList:
    type: object
    required:
      - total
      - list
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/Category'
  Subcategory:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      category_id:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  SubcategoryInput:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      category_id:
        type: integer
  SubcategoryList:
    type: object
    required:
      - total
      - list
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/Subcategory'
  Pleasure:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      user_id:
        type: integer
      subcategory_id:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  PleasureInput:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      user_id:
        type: integer
      subcategory_id:
        type: integer
  PleasureList:
    type: object
    required:
      - total
      - list
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/Pleasure'
  ErrorModel:
    type: object
    required:
      - status
      - error
      - exception
      - traces
    properties:
      status:
        type: number
      error:
        type: string
      exception:
        type: string
      traces:
        type: object
  UnprocessableEntityModel:
    type: object
    properties:
      field:
        type: array
        items:
          type: string
          description: Error fill field
